import 'package:chessts/chessts.dart';
import 'package:test/test.dart';

void main() {
  group('History', () {
    final Chess chess = Chess();
    final List<({String fen, List<dynamic> moves})> tests =
        <({String fen, List<dynamic> moves})>[
      (
        fen: '4q2k/2r1r3/4PR1p/p1p5/P1Bp1Q1P/1P6/6P1/6K1 b - - 4 41',
        moves: <String>[
          'c4',
          'e6',
          'Nf3',
          'd5',
          'd4',
          'Nf6',
          'Nc3',
          'Be7',
          'Bg5',
          'O-O',
          'e3',
          'h6',
          'Bh4',
          'b6',
          'cxd5',
          'Nxd5',
          'Bxe7',
          'Qxe7',
          'Nxd5',
          'exd5',
          'Rc1',
          'Be6',
          'Qa4',
          'c5',
          'Qa3',
          'Rc8',
          'Bb5',
          'a6',
          'dxc5',
          'bxc5',
          'O-O',
          'Ra7',
          'Be2',
          'Nd7',
          'Nd4',
          'Qf8',
          'Nxe6',
          'fxe6',
          'e4',
          'd4',
          'f4',
          'Qe7',
          'e5',
          'Rb8',
          'Bc4',
          'Kh8',
          'Qh3',
          'Nf8',
          'b3',
          'a5',
          'f5',
          'exf5',
          'Rxf5',
          'Nh7',
          'Rcf1',
          'Qd8',
          'Qg3',
          'Re7',
          'h4',
          'Rbb7',
          'e6',
          'Rbc7',
          'Qe5',
          'Qe8',
          'a4',
          'Qd8',
          'R1f2',
          'Qe8',
          'R2f3',
          'Qd8',
          'Bd3',
          'Qe8',
          'Qe4',
          'Nf6',
          'Rxf6',
          'gxf6',
          'Rxf6',
          'Kg8',
          'Bc4',
          'Kh8',
          'Qf4',
        ],
      ),
      (
        fen: '4q2k/2r1r3/4PR1p/p1p5/P1Bp1Q1P/1P6/6P1/6K1 b - - 4 41',
        moves: <Move>[
          Move(
            color: Color.white,
            from: Square.c2,
            to: Square.c4,
            flags: [MoveTypes.bigPawn],
            piece: Chess.pawn,
            san: 'c4',
            lan: 'c2c4',
            before: 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1',
            after: 'rnbqkbnr/pppppppp/8/8/2P5/8/PP1PPPPP/RNBQKBNR b KQkq - 0 1',
          ),
          Move(
            color: Color.black,
            from: Square.e7,
            to: Square.e6,
            flags: [MoveTypes.normal],
            piece: Chess.pawn,
            san: 'e6',
            lan: 'e7e6',
            before:
                'rnbqkbnr/pppppppp/8/8/2P5/8/PP1PPPPP/RNBQKBNR b KQkq - 0 1',
            after:
                'rnbqkbnr/pppp1ppp/4p3/8/2P5/8/PP1PPPPP/RNBQKBNR w KQkq - 0 2',
          ),
          Move(
            color: Color.white,
            from: Square.g1,
            to: Square.f3,
            flags: [MoveTypes.normal],
            piece: Chess.knight,
            san: 'Nf3',
            lan: 'g1f3',
            before:
                'rnbqkbnr/pppp1ppp/4p3/8/2P5/8/PP1PPPPP/RNBQKBNR w KQkq - 0 2',
            after:
                'rnbqkbnr/pppp1ppp/4p3/8/2P5/5N2/PP1PPPPP/RNBQKB1R b KQkq - 1 2',
          ),
          Move(
            color: Color.black,
            from: Square.d7,
            to: Square.d5,
            flags: [MoveTypes.bigPawn],
            piece: Chess.pawn,
            san: 'd5',
            lan: 'd7d5',
            before:
                'rnbqkbnr/pppp1ppp/4p3/8/2P5/5N2/PP1PPPPP/RNBQKB1R b KQkq - 1 2',
            after:
                'rnbqkbnr/ppp2ppp/4p3/3p4/2P5/5N2/PP1PPPPP/RNBQKB1R w KQkq - 0 3',
          ),
          Move(
            color: Color.white,
            from: Square.d2,
            to: Square.d4,
            flags: [MoveTypes.bigPawn],
            piece: Chess.pawn,
            san: 'd4',
            lan: 'd2d4',
            before:
                'rnbqkbnr/ppp2ppp/4p3/3p4/2P5/5N2/PP1PPPPP/RNBQKB1R w KQkq - 0 3',
            after:
                'rnbqkbnr/ppp2ppp/4p3/3p4/2PP4/5N2/PP2PPPP/RNBQKB1R b KQkq - 0 3',
          ),
          Move(
            color: Color.black,
            from: Square.g8,
            to: Square.f6,
            flags: [MoveTypes.normal],
            piece: Chess.knight,
            san: 'Nf6',
            lan: 'g8f6',
            before:
                'rnbqkbnr/ppp2ppp/4p3/3p4/2PP4/5N2/PP2PPPP/RNBQKB1R b KQkq - 0 3',
            after:
                'rnbqkb1r/ppp2ppp/4pn2/3p4/2PP4/5N2/PP2PPPP/RNBQKB1R w KQkq - 1 4',
          ),
          Move(
            color: Color.white,
            from: Square.b1,
            to: Square.c3,
            flags: [MoveTypes.normal],
            piece: Chess.knight,
            san: 'Nc3',
            lan: 'b1c3',
            before:
                'rnbqkb1r/ppp2ppp/4pn2/3p4/2PP4/5N2/PP2PPPP/RNBQKB1R w KQkq - 1 4',
            after:
                'rnbqkb1r/ppp2ppp/4pn2/3p4/2PP4/2N2N2/PP2PPPP/R1BQKB1R b KQkq - 2 4',
          ),
          Move(
            color: Color.black,
            from: Square.f8,
            to: Square.e7,
            flags: [MoveTypes.normal],
            piece: Chess.bishop,
            san: 'Be7',
            lan: 'f8e7',
            before:
                'rnbqkb1r/ppp2ppp/4pn2/3p4/2PP4/2N2N2/PP2PPPP/R1BQKB1R b KQkq - 2 4',
            after:
                'rnbqk2r/ppp1bppp/4pn2/3p4/2PP4/2N2N2/PP2PPPP/R1BQKB1R w KQkq - 3 5',
          ),
          Move(
            color: Color.white,
            from: Square.c1,
            to: Square.g5,
            flags: [MoveTypes.normal],
            piece: Chess.bishop,
            san: 'Bg5',
            lan: 'c1g5',
            before:
                'rnbqk2r/ppp1bppp/4pn2/3p4/2PP4/2N2N2/PP2PPPP/R1BQKB1R w KQkq - 3 5',
            after:
                'rnbqk2r/ppp1bppp/4pn2/3p2B1/2PP4/2N2N2/PP2PPPP/R2QKB1R b KQkq - 4 5',
          ),
          Move(
            color: Color.black,
            from: Square.e8,
            to: Square.g8,
            flags: [MoveTypes.ksideCastle],
            piece: Chess.king,
            san: 'O-O',
            lan: 'e8g8',
            before:
                'rnbqk2r/ppp1bppp/4pn2/3p2B1/2PP4/2N2N2/PP2PPPP/R2QKB1R b KQkq - 4 5',
            after:
                'rnbq1rk1/ppp1bppp/4pn2/3p2B1/2PP4/2N2N2/PP2PPPP/R2QKB1R w KQ - 5 6',
          ),
          Move(
            color: Color.white,
            from: Square.e2,
            to: Square.e3,
            flags: [MoveTypes.normal],
            piece: Chess.pawn,
            san: 'e3',
            lan: 'e2e3',
            before:
                'rnbq1rk1/ppp1bppp/4pn2/3p2B1/2PP4/2N2N2/PP2PPPP/R2QKB1R w KQ - 5 6',
            after:
                'rnbq1rk1/ppp1bppp/4pn2/3p2B1/2PP4/2N1PN2/PP3PPP/R2QKB1R b KQ - 0 6',
          ),
          Move(
            color: Color.black,
            from: Square.h7,
            to: Square.h6,
            flags: [MoveTypes.normal],
            piece: Chess.pawn,
            san: 'h6',
            lan: 'h7h6',
            before:
                'rnbq1rk1/ppp1bppp/4pn2/3p2B1/2PP4/2N1PN2/PP3PPP/R2QKB1R b KQ - 0 6',
            after:
                'rnbq1rk1/ppp1bpp1/4pn1p/3p2B1/2PP4/2N1PN2/PP3PPP/R2QKB1R w KQ - 0 7',
          ),
          Move(
            color: Color.white,
            from: Square.g5,
            to: Square.h4,
            flags: [MoveTypes.normal],
            piece: Chess.bishop,
            san: 'Bh4',
            lan: 'g5h4',
            before:
                'rnbq1rk1/ppp1bpp1/4pn1p/3p2B1/2PP4/2N1PN2/PP3PPP/R2QKB1R w KQ - 0 7',
            after:
                'rnbq1rk1/ppp1bpp1/4pn1p/3p4/2PP3B/2N1PN2/PP3PPP/R2QKB1R b KQ - 1 7',
          ),
          Move(
            color: Color.black,
            from: Square.b7,
            to: Square.b6,
            flags: [MoveTypes.normal],
            piece: Chess.pawn,
            san: 'b6',
            lan: 'b7b6',
            before:
                'rnbq1rk1/ppp1bpp1/4pn1p/3p4/2PP3B/2N1PN2/PP3PPP/R2QKB1R b KQ - 1 7',
            after:
                'rnbq1rk1/p1p1bpp1/1p2pn1p/3p4/2PP3B/2N1PN2/PP3PPP/R2QKB1R w KQ - 0 8',
          ),
          Move(
            color: Color.white,
            from: Square.c4,
            to: Square.d5,
            flags: [MoveTypes.capture],
            piece: Chess.pawn,
            captured: Chess.pawn,
            san: 'cxd5',
            lan: 'c4d5',
            before:
                'rnbq1rk1/p1p1bpp1/1p2pn1p/3p4/2PP3B/2N1PN2/PP3PPP/R2QKB1R w KQ - 0 8',
            after:
                'rnbq1rk1/p1p1bpp1/1p2pn1p/3P4/3P3B/2N1PN2/PP3PPP/R2QKB1R b KQ - 0 8',
          ),
          Move(
            color: Color.black,
            from: Square.f6,
            to: Square.d5,
            flags: [MoveTypes.capture],
            piece: Chess.knight,
            captured: Chess.pawn,
            san: 'Nxd5',
            lan: 'f6d5',
            before:
                'rnbq1rk1/p1p1bpp1/1p2pn1p/3P4/3P3B/2N1PN2/PP3PPP/R2QKB1R b KQ - 0 8',
            after:
                'rnbq1rk1/p1p1bpp1/1p2p2p/3n4/3P3B/2N1PN2/PP3PPP/R2QKB1R w KQ - 0 9',
          ),
          Move(
            color: Color.white,
            from: Square.h4,
            to: Square.e7,
            flags: [MoveTypes.capture],
            piece: Chess.bishop,
            captured: Chess.bishop,
            san: 'Bxe7',
            lan: 'h4e7',
            before:
                'rnbq1rk1/p1p1bpp1/1p2p2p/3n4/3P3B/2N1PN2/PP3PPP/R2QKB1R w KQ - 0 9',
            after:
                'rnbq1rk1/p1p1Bpp1/1p2p2p/3n4/3P4/2N1PN2/PP3PPP/R2QKB1R b KQ - 0 9',
          ),
          Move(
            color: Color.black,
            from: Square.d8,
            to: Square.e7,
            flags: [MoveTypes.capture],
            piece: Chess.queen,
            captured: Chess.bishop,
            san: 'Qxe7',
            lan: 'd8e7',
            before:
                'rnbq1rk1/p1p1Bpp1/1p2p2p/3n4/3P4/2N1PN2/PP3PPP/R2QKB1R b KQ - 0 9',
            after:
                'rnb2rk1/p1p1qpp1/1p2p2p/3n4/3P4/2N1PN2/PP3PPP/R2QKB1R w KQ - 0 10',
          ),
          Move(
            color: Color.white,
            from: Square.c3,
            to: Square.d5,
            flags: [MoveTypes.capture],
            piece: Chess.knight,
            captured: Chess.knight,
            san: 'Nxd5',
            lan: 'c3d5',
            before:
                'rnb2rk1/p1p1qpp1/1p2p2p/3n4/3P4/2N1PN2/PP3PPP/R2QKB1R w KQ - 0 10',
            after:
                'rnb2rk1/p1p1qpp1/1p2p2p/3N4/3P4/4PN2/PP3PPP/R2QKB1R b KQ - 0 10',
          ),
          Move(
            color: Color.black,
            from: Square.e6,
            to: Square.d5,
            flags: [MoveTypes.capture],
            piece: Chess.pawn,
            captured: Chess.knight,
            san: 'exd5',
            lan: 'e6d5',
            before:
                'rnb2rk1/p1p1qpp1/1p2p2p/3N4/3P4/4PN2/PP3PPP/R2QKB1R b KQ - 0 10',
            after:
                'rnb2rk1/p1p1qpp1/1p5p/3p4/3P4/4PN2/PP3PPP/R2QKB1R w KQ - 0 11',
          ),
          Move(
            color: Color.white,
            from: Square.a1,
            to: Square.c1,
            flags: [MoveTypes.normal],
            piece: Chess.rook,
            san: 'Rc1',
            lan: 'a1c1',
            before:
                'rnb2rk1/p1p1qpp1/1p5p/3p4/3P4/4PN2/PP3PPP/R2QKB1R w KQ - 0 11',
            after:
                'rnb2rk1/p1p1qpp1/1p5p/3p4/3P4/4PN2/PP3PPP/2RQKB1R b K - 1 11',
          ),
          Move(
            color: Color.black,
            from: Square.c8,
            to: Square.e6,
            flags: [MoveTypes.normal],
            piece: Chess.bishop,
            san: 'Be6',
            lan: 'c8e6',
            before:
                'rnb2rk1/p1p1qpp1/1p5p/3p4/3P4/4PN2/PP3PPP/2RQKB1R b K - 1 11',
            after:
                'rn3rk1/p1p1qpp1/1p2b2p/3p4/3P4/4PN2/PP3PPP/2RQKB1R w K - 2 12',
          ),
          Move(
            color: Color.white,
            from: Square.d1,
            to: Square.a4,
            flags: [MoveTypes.normal],
            piece: Chess.queen,
            san: 'Qa4',
            lan: 'd1a4',
            before:
                'rn3rk1/p1p1qpp1/1p2b2p/3p4/3P4/4PN2/PP3PPP/2RQKB1R w K - 2 12',
            after:
                'rn3rk1/p1p1qpp1/1p2b2p/3p4/Q2P4/4PN2/PP3PPP/2R1KB1R b K - 3 12',
          ),
          Move(
            color: Color.black,
            from: Square.c7,
            to: Square.c5,
            flags: [MoveTypes.bigPawn],
            piece: Chess.pawn,
            san: 'c5',
            lan: 'c7c5',
            before:
                'rn3rk1/p1p1qpp1/1p2b2p/3p4/Q2P4/4PN2/PP3PPP/2R1KB1R b K - 3 12',
            after:
                'rn3rk1/p3qpp1/1p2b2p/2pp4/Q2P4/4PN2/PP3PPP/2R1KB1R w K - 0 13',
          ),
          Move(
            color: Color.white,
            from: Square.a4,
            to: Square.a3,
            flags: [MoveTypes.normal],
            piece: Chess.queen,
            san: 'Qa3',
            lan: 'a4a3',
            before:
                'rn3rk1/p3qpp1/1p2b2p/2pp4/Q2P4/4PN2/PP3PPP/2R1KB1R w K - 0 13',
            after:
                'rn3rk1/p3qpp1/1p2b2p/2pp4/3P4/Q3PN2/PP3PPP/2R1KB1R b K - 1 13',
          ),
          Move(
            color: Color.black,
            from: Square.f8,
            to: Square.c8,
            flags: [MoveTypes.normal],
            piece: Chess.rook,
            san: 'Rc8',
            lan: 'f8c8',
            before:
                'rn3rk1/p3qpp1/1p2b2p/2pp4/3P4/Q3PN2/PP3PPP/2R1KB1R b K - 1 13',
            after:
                'rnr3k1/p3qpp1/1p2b2p/2pp4/3P4/Q3PN2/PP3PPP/2R1KB1R w K - 2 14',
          ),
          Move(
            color: Color.white,
            from: Square.f1,
            to: Square.b5,
            flags: [MoveTypes.normal],
            piece: Chess.bishop,
            san: 'Bb5',
            lan: 'f1b5',
            before:
                'rnr3k1/p3qpp1/1p2b2p/2pp4/3P4/Q3PN2/PP3PPP/2R1KB1R w K - 2 14',
            after:
                'rnr3k1/p3qpp1/1p2b2p/1Bpp4/3P4/Q3PN2/PP3PPP/2R1K2R b K - 3 14',
          ),
          Move(
            color: Color.black,
            from: Square.a7,
            to: Square.a6,
            flags: [MoveTypes.normal],
            piece: Chess.pawn,
            san: 'a6',
            lan: 'a7a6',
            before:
                'rnr3k1/p3qpp1/1p2b2p/1Bpp4/3P4/Q3PN2/PP3PPP/2R1K2R b K - 3 14',
            after:
                'rnr3k1/4qpp1/pp2b2p/1Bpp4/3P4/Q3PN2/PP3PPP/2R1K2R w K - 0 15',
          ),
          Move(
            color: Color.white,
            from: Square.d4,
            to: Square.c5,
            flags: [MoveTypes.capture],
            piece: Chess.pawn,
            captured: Chess.pawn,
            san: 'dxc5',
            lan: 'd4c5',
            before:
                'rnr3k1/4qpp1/pp2b2p/1Bpp4/3P4/Q3PN2/PP3PPP/2R1K2R w K - 0 15',
            after: 'rnr3k1/4qpp1/pp2b2p/1BPp4/8/Q3PN2/PP3PPP/2R1K2R b K - 0 15',
          ),
          Move(
            color: Color.black,
            from: Square.b6,
            to: Square.c5,
            flags: [MoveTypes.capture],
            piece: Chess.pawn,
            captured: Chess.pawn,
            san: 'bxc5',
            lan: 'b6c5',
            before:
                'rnr3k1/4qpp1/pp2b2p/1BPp4/8/Q3PN2/PP3PPP/2R1K2R b K - 0 15',
            after: 'rnr3k1/4qpp1/p3b2p/1Bpp4/8/Q3PN2/PP3PPP/2R1K2R w K - 0 16',
          ),
          Move(
            color: Color.white,
            from: Square.e1,
            to: Square.g1,
            flags: [MoveTypes.ksideCastle],
            piece: Chess.king,
            san: 'O-O',
            lan: 'e1g1',
            before: 'rnr3k1/4qpp1/p3b2p/1Bpp4/8/Q3PN2/PP3PPP/2R1K2R w K - 0 16',
            after: 'rnr3k1/4qpp1/p3b2p/1Bpp4/8/Q3PN2/PP3PPP/2R2RK1 b - - 1 16',
          ),
          Move(
            color: Color.black,
            from: Square.a8,
            to: Square.a7,
            flags: [MoveTypes.normal],
            piece: Chess.rook,
            san: 'Ra7',
            lan: 'a8a7',
            before: 'rnr3k1/4qpp1/p3b2p/1Bpp4/8/Q3PN2/PP3PPP/2R2RK1 b - - 1 16',
            after: '1nr3k1/r3qpp1/p3b2p/1Bpp4/8/Q3PN2/PP3PPP/2R2RK1 w - - 2 17',
          ),
          Move(
            color: Color.white,
            from: Square.b5,
            to: Square.e2,
            flags: [MoveTypes.normal],
            piece: Chess.bishop,
            san: 'Be2',
            lan: 'b5e2',
            before:
                '1nr3k1/r3qpp1/p3b2p/1Bpp4/8/Q3PN2/PP3PPP/2R2RK1 w - - 2 17',
            after: '1nr3k1/r3qpp1/p3b2p/2pp4/8/Q3PN2/PP2BPPP/2R2RK1 b - - 3 17',
          ),
          Move(
            color: Color.black,
            from: Square.b8,
            to: Square.d7,
            flags: [MoveTypes.normal],
            piece: Chess.knight,
            san: 'Nd7',
            lan: 'b8d7',
            before:
                '1nr3k1/r3qpp1/p3b2p/2pp4/8/Q3PN2/PP2BPPP/2R2RK1 b - - 3 17',
            after: '2r3k1/r2nqpp1/p3b2p/2pp4/8/Q3PN2/PP2BPPP/2R2RK1 w - - 4 18',
          ),
          Move(
            color: Color.white,
            from: Square.f3,
            to: Square.d4,
            flags: [MoveTypes.normal],
            piece: Chess.knight,
            san: 'Nd4',
            lan: 'f3d4',
            before:
                '2r3k1/r2nqpp1/p3b2p/2pp4/8/Q3PN2/PP2BPPP/2R2RK1 w - - 4 18',
            after:
                '2r3k1/r2nqpp1/p3b2p/2pp4/3N4/Q3P3/PP2BPPP/2R2RK1 b - - 5 18',
          ),
          Move(
            color: Color.black,
            from: Square.e7,
            to: Square.f8,
            flags: [MoveTypes.normal],
            piece: Chess.queen,
            san: 'Qf8',
            lan: 'e7f8',
            before:
                '2r3k1/r2nqpp1/p3b2p/2pp4/3N4/Q3P3/PP2BPPP/2R2RK1 b - - 5 18',
            after:
                '2r2qk1/r2n1pp1/p3b2p/2pp4/3N4/Q3P3/PP2BPPP/2R2RK1 w - - 6 19',
          ),
          Move(
            color: Color.white,
            from: Square.d4,
            to: Square.e6,
            flags: [MoveTypes.capture],
            piece: Chess.knight,
            captured: Chess.bishop,
            san: 'Nxe6',
            lan: 'd4e6',
            before:
                '2r2qk1/r2n1pp1/p3b2p/2pp4/3N4/Q3P3/PP2BPPP/2R2RK1 w - - 6 19',
            after: '2r2qk1/r2n1pp1/p3N2p/2pp4/8/Q3P3/PP2BPPP/2R2RK1 b - - 0 19',
          ),
          Move(
            color: Color.black,
            from: Square.f7,
            to: Square.e6,
            flags: [MoveTypes.capture],
            piece: Chess.pawn,
            captured: Chess.knight,
            san: 'fxe6',
            lan: 'f7e6',
            before:
                '2r2qk1/r2n1pp1/p3N2p/2pp4/8/Q3P3/PP2BPPP/2R2RK1 b - - 0 19',
            after: '2r2qk1/r2n2p1/p3p2p/2pp4/8/Q3P3/PP2BPPP/2R2RK1 w - - 0 20',
          ),
          Move(
            color: Color.white,
            from: Square.e3,
            to: Square.e4,
            flags: [MoveTypes.normal],
            piece: Chess.pawn,
            san: 'e4',
            lan: 'e3e4',
            before: '2r2qk1/r2n2p1/p3p2p/2pp4/8/Q3P3/PP2BPPP/2R2RK1 w - - 0 20',
            after: '2r2qk1/r2n2p1/p3p2p/2pp4/4P3/Q7/PP2BPPP/2R2RK1 b - - 0 20',
          ),
          Move(
            color: Color.black,
            from: Square.d5,
            to: Square.d4,
            flags: [MoveTypes.normal],
            piece: Chess.pawn,
            san: 'd4',
            lan: 'd5d4',
            before: '2r2qk1/r2n2p1/p3p2p/2pp4/4P3/Q7/PP2BPPP/2R2RK1 b - - 0 20',
            after: '2r2qk1/r2n2p1/p3p2p/2p5/3pP3/Q7/PP2BPPP/2R2RK1 w - - 0 21',
          ),
          Move(
            color: Color.white,
            from: Square.f2,
            to: Square.f4,
            flags: [MoveTypes.bigPawn],
            piece: Chess.pawn,
            san: 'f4',
            lan: 'f2f4',
            before: '2r2qk1/r2n2p1/p3p2p/2p5/3pP3/Q7/PP2BPPP/2R2RK1 w - - 0 21',
            after: '2r2qk1/r2n2p1/p3p2p/2p5/3pPP2/Q7/PP2B1PP/2R2RK1 b - - 0 21',
          ),
          Move(
            color: Color.black,
            from: Square.f8,
            to: Square.e7,
            flags: [MoveTypes.normal],
            piece: Chess.queen,
            san: 'Qe7',
            lan: 'f8e7',
            before:
                '2r2qk1/r2n2p1/p3p2p/2p5/3pPP2/Q7/PP2B1PP/2R2RK1 b - - 0 21',
            after: '2r3k1/r2nq1p1/p3p2p/2p5/3pPP2/Q7/PP2B1PP/2R2RK1 w - - 1 22',
          ),
          Move(
            color: Color.white,
            from: Square.e4,
            to: Square.e5,
            flags: [MoveTypes.normal],
            piece: Chess.pawn,
            san: 'e5',
            lan: 'e4e5',
            before:
                '2r3k1/r2nq1p1/p3p2p/2p5/3pPP2/Q7/PP2B1PP/2R2RK1 w - - 1 22',
            after:
                '2r3k1/r2nq1p1/p3p2p/2p1P3/3p1P2/Q7/PP2B1PP/2R2RK1 b - - 0 22',
          ),
          Move(
            color: Color.black,
            from: Square.c8,
            to: Square.b8,
            flags: [MoveTypes.normal],
            piece: Chess.rook,
            san: 'Rb8',
            lan: 'c8b8',
            before:
                '2r3k1/r2nq1p1/p3p2p/2p1P3/3p1P2/Q7/PP2B1PP/2R2RK1 b - - 0 22',
            after:
                '1r4k1/r2nq1p1/p3p2p/2p1P3/3p1P2/Q7/PP2B1PP/2R2RK1 w - - 1 23',
          ),
          Move(
            color: Color.white,
            from: Square.e2,
            to: Square.c4,
            flags: [MoveTypes.normal],
            piece: Chess.bishop,
            san: 'Bc4',
            lan: 'e2c4',
            before:
                '1r4k1/r2nq1p1/p3p2p/2p1P3/3p1P2/Q7/PP2B1PP/2R2RK1 w - - 1 23',
            after:
                '1r4k1/r2nq1p1/p3p2p/2p1P3/2Bp1P2/Q7/PP4PP/2R2RK1 b - - 2 23',
          ),
          Move(
            color: Color.black,
            from: Square.g8,
            to: Square.h8,
            flags: [MoveTypes.normal],
            piece: Chess.king,
            san: 'Kh8',
            lan: 'g8h8',
            before:
                '1r4k1/r2nq1p1/p3p2p/2p1P3/2Bp1P2/Q7/PP4PP/2R2RK1 b - - 2 23',
            after: '1r5k/r2nq1p1/p3p2p/2p1P3/2Bp1P2/Q7/PP4PP/2R2RK1 w - - 3 24',
          ),
          Move(
            color: Color.white,
            from: Square.a3,
            to: Square.h3,
            flags: [MoveTypes.normal],
            piece: Chess.queen,
            san: 'Qh3',
            lan: 'a3h3',
            before:
                '1r5k/r2nq1p1/p3p2p/2p1P3/2Bp1P2/Q7/PP4PP/2R2RK1 w - - 3 24',
            after: '1r5k/r2nq1p1/p3p2p/2p1P3/2Bp1P2/7Q/PP4PP/2R2RK1 b - - 4 24',
          ),
          Move(
            color: Color.black,
            from: Square.d7,
            to: Square.f8,
            flags: [MoveTypes.normal],
            piece: Chess.knight,
            san: 'Nf8',
            lan: 'd7f8',
            before:
                '1r5k/r2nq1p1/p3p2p/2p1P3/2Bp1P2/7Q/PP4PP/2R2RK1 b - - 4 24',
            after:
                '1r3n1k/r3q1p1/p3p2p/2p1P3/2Bp1P2/7Q/PP4PP/2R2RK1 w - - 5 25',
          ),
          Move(
            color: Color.white,
            from: Square.b2,
            to: Square.b3,
            flags: [MoveTypes.normal],
            piece: Chess.pawn,
            san: 'b3',
            lan: 'b2b3',
            before:
                '1r3n1k/r3q1p1/p3p2p/2p1P3/2Bp1P2/7Q/PP4PP/2R2RK1 w - - 5 25',
            after:
                '1r3n1k/r3q1p1/p3p2p/2p1P3/2Bp1P2/1P5Q/P5PP/2R2RK1 b - - 0 25',
          ),
          Move(
            color: Color.black,
            from: Square.a6,
            to: Square.a5,
            flags: [MoveTypes.normal],
            piece: Chess.pawn,
            san: 'a5',
            lan: 'a6a5',
            before:
                '1r3n1k/r3q1p1/p3p2p/2p1P3/2Bp1P2/1P5Q/P5PP/2R2RK1 b - - 0 25',
            after:
                '1r3n1k/r3q1p1/4p2p/p1p1P3/2Bp1P2/1P5Q/P5PP/2R2RK1 w - - 0 26',
          ),
          Move(
            color: Color.white,
            from: Square.f4,
            to: Square.f5,
            flags: [MoveTypes.normal],
            piece: Chess.pawn,
            san: 'f5',
            lan: 'f4f5',
            before:
                '1r3n1k/r3q1p1/4p2p/p1p1P3/2Bp1P2/1P5Q/P5PP/2R2RK1 w - - 0 26',
            after:
                '1r3n1k/r3q1p1/4p2p/p1p1PP2/2Bp4/1P5Q/P5PP/2R2RK1 b - - 0 26',
          ),
          Move(
            color: Color.black,
            from: Square.e6,
            to: Square.f5,
            flags: [MoveTypes.capture],
            piece: Chess.pawn,
            captured: Chess.pawn,
            san: 'exf5',
            lan: 'e6f5',
            before:
                '1r3n1k/r3q1p1/4p2p/p1p1PP2/2Bp4/1P5Q/P5PP/2R2RK1 b - - 0 26',
            after: '1r3n1k/r3q1p1/7p/p1p1Pp2/2Bp4/1P5Q/P5PP/2R2RK1 w - - 0 27',
          ),
          Move(
            color: Color.white,
            from: Square.f1,
            to: Square.f5,
            flags: [MoveTypes.capture],
            piece: Chess.rook,
            captured: Chess.pawn,
            san: 'Rxf5',
            lan: 'f1f5',
            before: '1r3n1k/r3q1p1/7p/p1p1Pp2/2Bp4/1P5Q/P5PP/2R2RK1 w - - 0 27',
            after: '1r3n1k/r3q1p1/7p/p1p1PR2/2Bp4/1P5Q/P5PP/2R3K1 b - - 0 27',
          ),
          Move(
            color: Color.black,
            from: Square.f8,
            to: Square.h7,
            flags: [MoveTypes.normal],
            piece: Chess.knight,
            san: 'Nh7',
            lan: 'f8h7',
            before: '1r3n1k/r3q1p1/7p/p1p1PR2/2Bp4/1P5Q/P5PP/2R3K1 b - - 0 27',
            after: '1r5k/r3q1pn/7p/p1p1PR2/2Bp4/1P5Q/P5PP/2R3K1 w - - 1 28',
          ),
          Move(
            color: Color.white,
            from: Square.c1,
            to: Square.f1,
            flags: [MoveTypes.normal],
            piece: Chess.rook,
            san: 'Rcf1',
            lan: 'c1f1',
            before: '1r5k/r3q1pn/7p/p1p1PR2/2Bp4/1P5Q/P5PP/2R3K1 w - - 1 28',
            after: '1r5k/r3q1pn/7p/p1p1PR2/2Bp4/1P5Q/P5PP/5RK1 b - - 2 28',
          ),
          Move(
            color: Color.black,
            from: Square.e7,
            to: Square.d8,
            flags: [MoveTypes.normal],
            piece: Chess.queen,
            san: 'Qd8',
            lan: 'e7d8',
            before: '1r5k/r3q1pn/7p/p1p1PR2/2Bp4/1P5Q/P5PP/5RK1 b - - 2 28',
            after: '1r1q3k/r5pn/7p/p1p1PR2/2Bp4/1P5Q/P5PP/5RK1 w - - 3 29',
          ),
          Move(
            color: Color.white,
            from: Square.h3,
            to: Square.g3,
            flags: [MoveTypes.normal],
            piece: Chess.queen,
            san: 'Qg3',
            lan: 'h3g3',
            before: '1r1q3k/r5pn/7p/p1p1PR2/2Bp4/1P5Q/P5PP/5RK1 w - - 3 29',
            after: '1r1q3k/r5pn/7p/p1p1PR2/2Bp4/1P4Q1/P5PP/5RK1 b - - 4 29',
          ),
          Move(
            color: Color.black,
            from: Square.a7,
            to: Square.e7,
            flags: [MoveTypes.normal],
            piece: Chess.rook,
            san: 'Re7',
            lan: 'a7e7',
            before: '1r1q3k/r5pn/7p/p1p1PR2/2Bp4/1P4Q1/P5PP/5RK1 b - - 4 29',
            after: '1r1q3k/4r1pn/7p/p1p1PR2/2Bp4/1P4Q1/P5PP/5RK1 w - - 5 30',
          ),
          Move(
            color: Color.white,
            from: Square.h2,
            to: Square.h4,
            flags: [MoveTypes.bigPawn],
            piece: Chess.pawn,
            san: 'h4',
            lan: 'h2h4',
            before: '1r1q3k/4r1pn/7p/p1p1PR2/2Bp4/1P4Q1/P5PP/5RK1 w - - 5 30',
            after: '1r1q3k/4r1pn/7p/p1p1PR2/2Bp3P/1P4Q1/P5P1/5RK1 b - - 0 30',
          ),
          Move(
            color: Color.black,
            from: Square.b8,
            to: Square.b7,
            flags: [MoveTypes.normal],
            piece: Chess.rook,
            san: 'Rbb7',
            lan: 'b8b7',
            before: '1r1q3k/4r1pn/7p/p1p1PR2/2Bp3P/1P4Q1/P5P1/5RK1 b - - 0 30',
            after: '3q3k/1r2r1pn/7p/p1p1PR2/2Bp3P/1P4Q1/P5P1/5RK1 w - - 1 31',
          ),
          Move(
            color: Color.white,
            from: Square.e5,
            to: Square.e6,
            flags: [MoveTypes.normal],
            piece: Chess.pawn,
            san: 'e6',
            lan: 'e5e6',
            before: '3q3k/1r2r1pn/7p/p1p1PR2/2Bp3P/1P4Q1/P5P1/5RK1 w - - 1 31',
            after: '3q3k/1r2r1pn/4P2p/p1p2R2/2Bp3P/1P4Q1/P5P1/5RK1 b - - 0 31',
          ),
          Move(
            color: Color.black,
            from: Square.b7,
            to: Square.c7,
            flags: [MoveTypes.normal],
            piece: Chess.rook,
            san: 'Rbc7',
            lan: 'b7c7',
            before: '3q3k/1r2r1pn/4P2p/p1p2R2/2Bp3P/1P4Q1/P5P1/5RK1 b - - 0 31',
            after: '3q3k/2r1r1pn/4P2p/p1p2R2/2Bp3P/1P4Q1/P5P1/5RK1 w - - 1 32',
          ),
          Move(
            color: Color.white,
            from: Square.g3,
            to: Square.e5,
            flags: [MoveTypes.normal],
            piece: Chess.queen,
            san: 'Qe5',
            lan: 'g3e5',
            before: '3q3k/2r1r1pn/4P2p/p1p2R2/2Bp3P/1P4Q1/P5P1/5RK1 w - - 1 32',
            after: '3q3k/2r1r1pn/4P2p/p1p1QR2/2Bp3P/1P6/P5P1/5RK1 b - - 2 32',
          ),
          Move(
            color: Color.black,
            from: Square.d8,
            to: Square.e8,
            flags: [MoveTypes.normal],
            piece: Chess.queen,
            san: 'Qe8',
            lan: 'd8e8',
            before: '3q3k/2r1r1pn/4P2p/p1p1QR2/2Bp3P/1P6/P5P1/5RK1 b - - 2 32',
            after: '4q2k/2r1r1pn/4P2p/p1p1QR2/2Bp3P/1P6/P5P1/5RK1 w - - 3 33',
          ),
          Move(
            color: Color.white,
            from: Square.a2,
            to: Square.a4,
            flags: [MoveTypes.bigPawn],
            piece: Chess.pawn,
            san: 'a4',
            lan: 'a2a4',
            before: '4q2k/2r1r1pn/4P2p/p1p1QR2/2Bp3P/1P6/P5P1/5RK1 w - - 3 33',
            after: '4q2k/2r1r1pn/4P2p/p1p1QR2/P1Bp3P/1P6/6P1/5RK1 b - - 0 33',
          ),
          Move(
            color: Color.black,
            from: Square.e8,
            to: Square.d8,
            flags: [MoveTypes.normal],
            piece: Chess.queen,
            san: 'Qd8',
            lan: 'e8d8',
            before: '4q2k/2r1r1pn/4P2p/p1p1QR2/P1Bp3P/1P6/6P1/5RK1 b - - 0 33',
            after: '3q3k/2r1r1pn/4P2p/p1p1QR2/P1Bp3P/1P6/6P1/5RK1 w - - 1 34',
          ),
          Move(
            color: Color.white,
            from: Square.f1,
            to: Square.f2,
            flags: [MoveTypes.normal],
            piece: Chess.rook,
            san: 'R1f2',
            lan: 'f1f2',
            before: '3q3k/2r1r1pn/4P2p/p1p1QR2/P1Bp3P/1P6/6P1/5RK1 w - - 1 34',
            after: '3q3k/2r1r1pn/4P2p/p1p1QR2/P1Bp3P/1P6/5RP1/6K1 b - - 2 34',
          ),
          Move(
            color: Color.black,
            from: Square.d8,
            to: Square.e8,
            flags: [MoveTypes.normal],
            piece: Chess.queen,
            san: 'Qe8',
            lan: 'd8e8',
            before: '3q3k/2r1r1pn/4P2p/p1p1QR2/P1Bp3P/1P6/5RP1/6K1 b - - 2 34',
            after: '4q2k/2r1r1pn/4P2p/p1p1QR2/P1Bp3P/1P6/5RP1/6K1 w - - 3 35',
          ),
          Move(
            color: Color.white,
            from: Square.f2,
            to: Square.f3,
            flags: [MoveTypes.normal],
            piece: Chess.rook,
            san: 'R2f3',
            lan: 'f2f3',
            before: '4q2k/2r1r1pn/4P2p/p1p1QR2/P1Bp3P/1P6/5RP1/6K1 w - - 3 35',
            after: '4q2k/2r1r1pn/4P2p/p1p1QR2/P1Bp3P/1P3R2/6P1/6K1 b - - 4 35',
          ),
          Move(
            color: Color.black,
            from: Square.e8,
            to: Square.d8,
            flags: [MoveTypes.normal],
            piece: Chess.queen,
            san: 'Qd8',
            lan: 'e8d8',
            before: '4q2k/2r1r1pn/4P2p/p1p1QR2/P1Bp3P/1P3R2/6P1/6K1 b - - 4 35',
            after: '3q3k/2r1r1pn/4P2p/p1p1QR2/P1Bp3P/1P3R2/6P1/6K1 w - - 5 36',
          ),
          Move(
            color: Color.white,
            from: Square.c4,
            to: Square.d3,
            flags: [MoveTypes.normal],
            piece: Chess.bishop,
            san: 'Bd3',
            lan: 'c4d3',
            before: '3q3k/2r1r1pn/4P2p/p1p1QR2/P1Bp3P/1P3R2/6P1/6K1 w - - 5 36',
            after: '3q3k/2r1r1pn/4P2p/p1p1QR2/P2p3P/1P1B1R2/6P1/6K1 b - - 6 36',
          ),
          Move(
            color: Color.black,
            from: Square.d8,
            to: Square.e8,
            flags: [MoveTypes.normal],
            piece: Chess.queen,
            san: 'Qe8',
            lan: 'd8e8',
            before:
                '3q3k/2r1r1pn/4P2p/p1p1QR2/P2p3P/1P1B1R2/6P1/6K1 b - - 6 36',
            after: '4q2k/2r1r1pn/4P2p/p1p1QR2/P2p3P/1P1B1R2/6P1/6K1 w - - 7 37',
          ),
          Move(
            color: Color.white,
            from: Square.e5,
            to: Square.e4,
            flags: [MoveTypes.normal],
            piece: Chess.queen,
            san: 'Qe4',
            lan: 'e5e4',
            before:
                '4q2k/2r1r1pn/4P2p/p1p1QR2/P2p3P/1P1B1R2/6P1/6K1 w - - 7 37',
            after: '4q2k/2r1r1pn/4P2p/p1p2R2/P2pQ2P/1P1B1R2/6P1/6K1 b - - 8 37',
          ),
          Move(
            color: Color.black,
            from: Square.h7,
            to: Square.f6,
            flags: [MoveTypes.normal],
            piece: Chess.knight,
            san: 'Nf6',
            lan: 'h7f6',
            before:
                '4q2k/2r1r1pn/4P2p/p1p2R2/P2pQ2P/1P1B1R2/6P1/6K1 b - - 8 37',
            after:
                '4q2k/2r1r1p1/4Pn1p/p1p2R2/P2pQ2P/1P1B1R2/6P1/6K1 w - - 9 38',
          ),
          Move(
            color: Color.white,
            from: Square.f5,
            to: Square.f6,
            flags: [MoveTypes.capture],
            piece: Chess.rook,
            captured: Chess.knight,
            san: 'Rxf6',
            lan: 'f5f6',
            before:
                '4q2k/2r1r1p1/4Pn1p/p1p2R2/P2pQ2P/1P1B1R2/6P1/6K1 w - - 9 38',
            after: '4q2k/2r1r1p1/4PR1p/p1p5/P2pQ2P/1P1B1R2/6P1/6K1 b - - 0 38',
          ),
          Move(
            color: Color.black,
            from: Square.g7,
            to: Square.f6,
            flags: [MoveTypes.capture],
            piece: Chess.pawn,
            captured: Chess.rook,
            san: 'gxf6',
            lan: 'g7f6',
            before: '4q2k/2r1r1p1/4PR1p/p1p5/P2pQ2P/1P1B1R2/6P1/6K1 b - - 0 38',
            after: '4q2k/2r1r3/4Pp1p/p1p5/P2pQ2P/1P1B1R2/6P1/6K1 w - - 0 39',
          ),
          Move(
            color: Color.white,
            from: Square.f3,
            to: Square.f6,
            flags: [MoveTypes.capture],
            piece: Chess.rook,
            captured: Chess.pawn,
            san: 'Rxf6',
            lan: 'f3f6',
            before: '4q2k/2r1r3/4Pp1p/p1p5/P2pQ2P/1P1B1R2/6P1/6K1 w - - 0 39',
            after: '4q2k/2r1r3/4PR1p/p1p5/P2pQ2P/1P1B4/6P1/6K1 b - - 0 39',
          ),
          Move(
            color: Color.black,
            from: Square.h8,
            to: Square.g8,
            flags: [MoveTypes.normal],
            piece: Chess.king,
            san: 'Kg8',
            lan: 'h8g8',
            before: '4q2k/2r1r3/4PR1p/p1p5/P2pQ2P/1P1B4/6P1/6K1 b - - 0 39',
            after: '4q1k1/2r1r3/4PR1p/p1p5/P2pQ2P/1P1B4/6P1/6K1 w - - 1 40',
          ),
          Move(
            color: Color.white,
            from: Square.d3,
            to: Square.c4,
            flags: [MoveTypes.normal],
            piece: Chess.bishop,
            san: 'Bc4',
            lan: 'd3c4',
            before: '4q1k1/2r1r3/4PR1p/p1p5/P2pQ2P/1P1B4/6P1/6K1 w - - 1 40',
            after: '4q1k1/2r1r3/4PR1p/p1p5/P1BpQ2P/1P6/6P1/6K1 b - - 2 40',
          ),
          Move(
            color: Color.black,
            from: Square.g8,
            to: Square.h8,
            flags: [MoveTypes.normal],
            piece: Chess.king,
            san: 'Kh8',
            lan: 'g8h8',
            before: '4q1k1/2r1r3/4PR1p/p1p5/P1BpQ2P/1P6/6P1/6K1 b - - 2 40',
            after: '4q2k/2r1r3/4PR1p/p1p5/P1BpQ2P/1P6/6P1/6K1 w - - 3 41',
          ),
          Move(
            color: Color.white,
            from: Square.e4,
            to: Square.f4,
            flags: [MoveTypes.normal],
            piece: Chess.queen,
            san: 'Qf4',
            lan: 'e4f4',
            before: '4q2k/2r1r3/4PR1p/p1p5/P1BpQ2P/1P6/6P1/6K1 w - - 3 41',
            after: '4q2k/2r1r3/4PR1p/p1p5/P1Bp1Q1P/1P6/6P1/6K1 b - - 4 41',
          ),
        ],
      )
    ];

    for (final ({String fen, List<dynamic> moves}) thisTest in tests) {
      test('History ${thisTest.fen}', () {
        chess.reset();

        if (thisTest.moves is List<String>) {
          for (final String move in (thisTest.moves as List<String>)) {
            chess.move(san: move);
          }

          final List<Move> history = chess.history();
          expect(chess.fen(), thisTest.fen);
          expect(history.length, thisTest.moves.length);

          for (int j = 0; j < thisTest.moves.length; j++) {
            expect(history[j].san, thisTest.moves[j]);
          }
        } else if (thisTest.moves is List<Move>) {
          for (final Move move in (thisTest.moves as List<Move>)) {
            chess.move(from: move.from, to: move.to, promotion: move.promotion);
          }

          final List<Move> history = chess.history();
          expect(chess.fen(), thisTest.fen);
          expect(history.length, thisTest.moves.length);

          for (int j = 0; j < thisTest.moves.length; j++) {
            expect(history[j], thisTest.moves[j]);
          }
        }
      });
    }
  });
}
